# ### tmux: 13 Cool Tweaks to Make It Personal and Powerful

# Add true color & italics support with alacritty terminal
set -g default-terminal "alacritty"

# #### 1. Prefix Should be Simple
unbind-key C-b              # free the original bind-key key
set-option -g prefix C-a    # setting the prefix from C-b to C-a
bind-key C-a send-prefix    # ensure that we can send Ctrl-A to other apps or the shell that your interacting

# #### 2. Just Reload the Config
bind-key R source-file ~/.tmux.conf \; display "Config Reloaded !"

# #### 3. This is How I Want to Start
set-option -g default-shell /bin/zsh          # login shell for new windows/pane

# #### 4. I Can't See Enough !
set-option -g display-time 1000            # By default, status msg disappears in the blink of an eye (750ms)
set-option -g display-panes-time 1200      # By default, pane number disappears in 1 s
set-option -g history-limit 50000          # maximum number of lines held in window history - crank it up from 2k default
set-option -g lock-after-time 3600         # lock the session after 60 mins of inactivity. Sometimes, it is good to protect your screen to make sure other's can't see enough.
set-option -wg automatic-rename off        # default names are too vague to see. Let me name it.

# #### 5. Count like Human
set-option -g base-index 1                # window index will start with 1
set-window-option -g pane-base-index 1    # pane index will start with 1
set-option -g renumber-windows on

# #### 6. Kill it with X-Force !
unbind-key x               # unbind-key “x” from it’s current job of “ask and then close”
bind-key x kill-pane       # rebind-key it to just “close”
bind-key X kill-session    # key combo for killing the entire session - <prefix> + shift + x

# #### 7. Make Splitting Panes Intuitive
bind-key | split-window -fh -c "#{pane_current_path}"
bind-key _ split-window -fv -c "#{pane_current_path}"

bind-key "\\" split-window -h -c "#{pane_current_path}"  # \\ added as ESC
bind-key - split-window -v -c "#{pane_current_path}"

# #### 8. Make Movements Quick
# Pane: Vim Style Movements
bind-key -r h select-pane -L              # go left
bind-key -r j select-pane -D              # go down
bind-key -r l select-pane -R              # go right
bind-key -r k select-pane -U              # go up
# Pane: Arrow Movements
bind-key Up select-pane -U
bind-key Down select-pane -D
bind-key Left select-pane -L
bind-key Right select-pane -R
# Window: Movements
bind-key L last-window
bind-key -r C-h select-window -t :- # cycle through the windows for quick window selection
bind-key -r C-l select-window -t :+
# swap window
bind-key -r "<" swap-window -d -t -1
bind-key -r ">" swap-window -d -t +1

# word separators for automatic word selection
set-window-option -g word-separators ' @"=()[]'  # default => ‘ -_@’.
# tmux adds a short, almost imperceptible delay between the commands that can cause funny behavior when running vim inside tmux.
set-option -s escape-time 0
# Command Prompt Movements:  within the tmux command prompt and the command prompt is accessed using <P>: (in the status line)
set-option -g status-keys vi

# #### 9. Resizing Panes
# Vim Style
bind-key -r H resize-pane -L 2         # resize a pane two rows at a time.
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2
bind-key -r F resize-pane -x 86

# #### 10. Copying and Pasting Text
# To navigating through output in quick way, enable vim navigation keys
set-window-option -g mode-keys vi

# Interacting with Paste Buffer
bind-key Escape copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel
bind-key C-b choose-buffer # view the buffer stack
unbind-key p
bind-key p paste-buffer # default "<prefix> ]"
# Alt+C: To copy from the current buffer to the sys clipboard .
bind-key M-c run "tmux save-buffer - | xclip -i -sel clipboard"

# Alt+V: To paste text from sys clipboard into current buffer
bind-key M-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\""

# Ctr+C: Make it even better -just one step to move from sys->buffer->editor vice versa
bind-key -T copy-mode-vi C-c send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"

# Ctr+V: To paste text from sys clipboard into the view
bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\";tmux paste-buffer"

# To take ASCII screenshots (tmux-resurrect uses C-s for saving, here binding to Alt-s ) .
# create the dir for storing screenshots
bind-key M-s run "tmux capture-pane; tmux save-buffer ~/.tmux/history/tmux/#{session_name}-#{window_index}-#{pane_index}-$(date +%Y%m%dT%H%M%S).screenshot"

# #### 11. Visual Styling: Configuring Colors
# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"
# Pane divider
set-window-option -g pane-border-style fg=colour233,bg=colour232
set-window-option -g pane-active-border-style fg=colour233,bg=colour232
# Cool trick: Let's dim out any pane that's not active.
set-window-option -g window-style fg=colour245,bg=colour232
set-window-option -g window-active-style fg=colour230,bg=colour232
# Command / Message line
set-window-option -g message-style fg=black,bold,bg=colour11

# #### 12. Dress Up the Status Line
# Basic
set-option -g status on
set-option -g status-interval 2   # Update the status line every 2 seconds (15 is default)
set-option -gq status-utf8 on     # This is unknown option in latest tmux. But, I need this line for supporting old version of tmux. So, be quiet (-q) about it.

# Status Bar
set-option -g status-style fg=white,bg=colour233
set-option -g status-justify centre
#set-window-option -g window-status-style fg=colour255,bg=colour232
set-window-option -g window-status-last-style fg=colour36,bg=colour233
#set-window-option -g window-status-current-style fg=colour48,bg=colour232
set-window-option -g window-status-separator " "
set-window-option -g window-status-current-format "#[fg=colour255, bg=colour232]#[fg=colour255, bg=colour233] [#I] #W #[fg=colour27, bg=colour233]"

# Left Side
# Show my active session, window, pane name or id
set-option -g status-left-length 60   # default 10
set-option -g status-left "#[fg=#d0d3d4] #S | [#I]#W | [#P]"
set-option -g status-left "#(~/.tmux/style/tmux-powerline/powerline.sh left)"
# set-option -g status-left-styleset -g @plugin 'tmux-plugins/tmux-battery'

# Right Side
set-option -g status-right-length 90   # default 50
# set-option -g status-right "#{cpu_fg_color}C#{cpu_percentage} | #{ram_fg_color}R#{ram_percentage} | #[fg=#00a4f1]D#(df -hl  | egrep 'sda3|22991' | awk '{print $5}') | #[fg=#d0d3d4]#(uptime | awk '/up/{gsub(\",\",\"\",$0); print $3;}')"
set-option -g status-right "#(~/.tmux/style/tmux-powerline/powerline.sh right)"
# Enable Activity Alerts
set-window-option -g monitor-activity on   # highlights the window name in the status line
set-option -g pane-border-style fg=colour237
set-option -g pane-active-border-style fg=colour237

# #### 13. Extending tmux with Plugins
# change the install path
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/tpm'
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-sidebar'
# set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'thewtex/tmux-mem-cpu-load'  # used in tmux powerline
set -g @cpu_percentage_format "%02d%%"
set -g @ram_percentage_format "%02d%%"
# By default files are saved in ~/.tmux/resurrect dir. Change this to our custom path
set -g @resurrect-dir '~/.tmux/resurrect'
# Last saved environment is automatically restored when tmux is started.
set -g @continuum-boot 'on'
# change the save interval from 15 mins to 30
set -g @continuum-save-interval '30'
# terminal window will go fullscreen
set -g @continuum-boot-options 'fullscreen'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# Hit prefix + I to install plugins for the first time. It takes few seconds. So, wait before panic.
#
# resurrect:
#   prefix + Ctrl-s - save
#   prefix + Ctrl-r - restore
#
# sidebar:
#   prefix + Tab    - toggle sidebar
#
# ```
set -g mouse on

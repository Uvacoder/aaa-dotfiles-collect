# Flow control
# if
snippet if "if (condition) { ... }"
	if (${1:true}) {
		${0:${VISUAL}}
	}
# if ... else
snippet ife "if (condition) { ... } else { ... }"
	if (${1:true}) {
		${0:${VISUAL}}
	} else {
		${2}
	}
# switch
snippet switch
	switch (${1:expression}) {
		case '${3:case}':
			${4}
			break
		${0}
		default:
			${2}
	}
snippet try "try { ... } catch(e) { ... }"
	try {
		${0:${VISUAL}}
	} catch (${1:e}) {
		${2:/* handle error */}
	}
snippet tryf "try { ... } catch(e) { ... } finally { ... }"
	try {
		${0:${VISUAL}}
	} catch (${1:e}) {
		${2:/* handle error */}
	} finally {
		${3:/* be executed regardless of the try / catch result*/}
	}
# throw Error
snippet terr
	throw new Error('${1:error message}')
# return
# Objects
# Object Method
snippet :f
	${1:method_name}: function (${2:attribute}) {
		${0:${VISUAL}}
	},
# hasOwnProperty
# Documentation
# docstring
snippet /**
	/**
	 * ${0:description}
	 *
	 */
# JSON.parse
snippet jsonp
	JSON.parse(${0:jstr})
# JSON.stringify
snippet jsons
	JSON.stringify(${0:object})
# Debugging
snippet cl "console.log"
	console.log('${0} -> ', ${1})
snippet cd "console.debug"
	console.debug('${0} -> ', ${1})
snippet ce "console.error"
	console.error('${0} -> ', ${1})
snippet cw "console.warn"
	console.warn('${0} -> ', ${1})
snippet ci "console.info"
	console.info('${0} -> ', ${1})
